---
# Source: kalypso-observability-hub/charts/grafana/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
---
# Source: kalypso-observability-hub/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kalypso-observability-hub-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kalypso-observability-hub/charts/api-server/templates/api-server.yaml
apiVersion: v1
kind: Secret
metadata:
  name: api-server-secret
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: api-server
type: Opaque
data:
  POSTGRES_USER: Y3JlYXRvcg==
  POSTGRES_PASSWORD: YzY3
---
# Source: kalypso-observability-hub/charts/postgres/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: postgre-db-secret
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  password: "c67"
  username: "creator"
---
# Source: kalypso-observability-hub/charts/api-server/templates/api-server.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-server-config
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: api-server
data:
  POSTGRES_HOST: postgre-db-svc
  POSTGRES_PORT: "5432"
  POSTGRES_DBNAME: hub
  POSTGRES_SSL_MODE: disable
---
# Source: kalypso-observability-hub/charts/grafana/templates/cluster-state-dashboard.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-state-dashboard
  labels:
    grafana_dashboard: "1"
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm    
data:
  cluster-state-dashboard.json:
    |-
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "-- Grafana --"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "target": {
                "limit": 100,
                "matchAny": false,
                "tags": [],
                "type": "dashboard"
              },
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "links": [],
        "liveNow": false,
        "panels": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "displayMode": "auto",
                  "filterable": true,
                  "inspect": false
                },
                "mappings": [
                  {
                    "options": {
                      "failure": {
                        "color": "dark-red",
                        "index": 2
                      },
                      "in_progress": {
                        "color": "dark-blue",
                        "index": 1
                      },
                      "success": {
                        "color": "dark-green",
                        "index": 0
                      }
                    },
                    "type": "value"
                  }
                ],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Environment"
                  },
                  "properties": [
                    {
                      "id": "custom.filterable",
                      "value": true
                    },
                    {
                      "id": "custom.width",
                      "value": 122
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Status"
                  },
                  "properties": [
                    {
                      "id": "custom.displayMode",
                      "value": "color-text"
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Cluster"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 210
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Workload"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 178
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 8,
              "w": 22,
              "x": 0,
              "y": 0
            },
            "id": 6,
            "options": {
              "footer": {
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": []
            },
            "pluginVersion": "9.1.0",
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P44368ADAD746BC27"
                },
                "format": "table",
                "group": [],
                "metricColumn": "none",
                "rawQuery": true,
                "rawSql": "select e.name environment_name,\n       h.Name host_name, \n       wk.name workspace_name,\n       a.name application_name, \n       w.name workload_name,\n       dt.name deployment_target_name,\n       dt.id deployment_target_id, depl.status, depl.deployed_workload_version, depl.gitops_commit_id, depl.deployed_on\nfrom reconciler r\n    left outer join (select d.reconciler_id, d.status, wv.version deployed_workload_version, d.gitops_commit_id, d.created_on deployed_on\n    from deployment d,\n        deployment_assignment da,\n        workload_version wv\n    where d.gitops_commit_id = da.gitops_commit_id \n        and da.workload_version_id = wv.id\n        and d.created_on = (select max(created_on) from deployment where reconciler_id = d.reconciler_id)\n    ) depl on r.id = depl.reconciler_id,\n    deployment_target dt,\n    host h,\n    workspace wk,\n    workload w,\n    application a,\n    environment e\nwhere r.manifests_storage_type = dt.manifests_storage_type\n    and r.manifests_endpoint = dt.manifests_endpoint\n    and r.host_id = h.id\n    and dt.workload_id = w.id\n    and w.application_id = a.id\n    and a.workspace_id = wk.id \n    and dt.environment_id = e.id\n    and e.id = '$Environment' \n    and w.id = '$Workload'\n    and dt.id = '$DeploymentTarget'\n    and depl.status in (${Status:sqlstring})\n    \n    ",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "value"
                      ],
                      "type": "column"
                    }
                  ]
                ],
                "timeColumn": "time",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Clusters State",
            "transformations": [
              {
                "id": "organize",
                "options": {
                  "excludeByName": {
                    "deployment_target_id": true
                  },
                  "indexByName": {
                    "application_name": 1,
                    "deployed_on": 9,
                    "deployed_workload_version": 7,
                    "deployment_target_id": 6,
                    "deployment_target_name": 5,
                    "environment_name": 2,
                    "gitops_commit_id": 8,
                    "host_name": 3,
                    "status": 10,
                    "workload_name": 4,
                    "workspace_name": 0
                  },
                  "renameByName": {
                    "application_name": "Application",
                    "deployed_on": "Deployed On",
                    "deployed_workload_version": "Deployed Version",
                    "deployment_target_id": "",
                    "deployment_target_name": "Deployment Target",
                    "environment_name": "Environment",
                    "gitops_commit_id": "GitOps Commit",
                    "host_name": "Cluster",
                    "status": "Status",
                    "workload_name": "Workload",
                    "workspace_name": "Workspace"
                  }
                }
              }
            ],
            "type": "table"
          }
        ],
        "refresh": false,
        "schemaVersion": 37,
        "style": "dark",
        "tags": [],
        "templating": {
          "list": [
            {
              "current": {
                "selected": false,
                "text": "d2",
                "value": "24"
              },
              "datasource": {
                "type": "postgres",
                "uid": "P44368ADAD746BC27"
              },
              "definition": "select name __text, id __value from environment",
              "hide": 0,
              "includeAll": false,
              "multi": false,
              "name": "Environment",
              "options": [],
              "query": "select name __text, id __value from environment",
              "refresh": 1,
              "regex": "",
              "skipUrlSync": false,
              "sort": 1,
              "type": "query"
            },
            {
              "current": {
                "selected": false,
                "text": "vsu",
                "value": "25"
              },
              "datasource": {
                "type": "postgres",
                "uid": "P44368ADAD746BC27"
              },
              "definition": "select name __text, id __value  from deployment_target where environment_id=$Environment",
              "hide": 0,
              "includeAll": false,
              "label": "Deployment Target",
              "multi": false,
              "name": "DeploymentTarget",
              "options": [],
              "query": "select name __text, id __value  from deployment_target where environment_id=$Environment",
              "refresh": 1,
              "regex": "",
              "skipUrlSync": false,
              "sort": 0,
              "type": "query"
            },
            {
              "current": {
                "selected": false,
                "text": "rs-dispatcher-framework",
                "value": "25"
              },
              "datasource": {
                "type": "postgres",
                "uid": "P44368ADAD746BC27"
              },
              "definition": "select name __text, id __value  from workload",
              "hide": 0,
              "includeAll": false,
              "multi": false,
              "name": "Workload",
              "options": [],
              "query": "select name __text, id __value  from workload",
              "refresh": 1,
              "regex": "",
              "skipUrlSync": false,
              "sort": 0,
              "type": "query"
            },
            {
              "current": {
                "selected": false,
                "text": [
                  "success"
                ],
                "value": [
                  "success"
                ]
              },
              "hide": 0,
              "includeAll": true,
              "multi": true,
              "name": "Status",
              "options": [
                {
                  "selected": false,
                  "text": "All",
                  "value": "$__all"
                },
                {
                  "selected": true,
                  "text": "success",
                  "value": "success"
                },
                {
                  "selected": false,
                  "text": "failure",
                  "value": "failure"
                },
                {
                  "selected": false,
                  "text": "in_progress",
                  "value": "in_progress"
                }
              ],
              "query": "success, failure, in_progress",
              "queryValue": "",
              "skipUrlSync": false,
              "type": "custom"
            }
          ]
        },
        "time": {
          "from": "now-24h",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Cluster State",
        "uid": "IPrZeI34k",
        "version": 1,
        "weekStart": ""
      }
---
# Source: kalypso-observability-hub/charts/grafana/templates/config-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config-dashboards
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
data:
  provider.yaml: |
    apiVersion: 1
    providers:
    - allowUiUpdates: false
      disableDeletion: false
      folder: ""
      name: sidecarProvider
      options:
        foldersFromFilesStructure: false
        path: /tmp/dashboards
      orgId: 1
      type: file
      updateIntervalSeconds: 30
---
# Source: kalypso-observability-hub/charts/grafana/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    grafana_datasource: "1"
    namespace: grafana
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
    - name: Postgres
      type: postgres
      url:  postgre-db-svc.hub.svc.cluster.local:5432
      user: hub
      secureJsonData:
        password: 'c67'
      jsonData:
        database: hub
        sslmode: 'disable' # disable/require/verify-ca/verify-full
        maxOpenConns: 100 # Grafana v5.4+
        maxIdleConns: 100 # Grafana v5.4+
        maxIdleConnsAuto: true # Grafana v9.5.1+
        connMaxLifetime: 14400 # Grafana v5.4+
        postgresVersion: 903 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
        timescaledb: false    
  grafana.ini: "[auth]\n  disable_login_form = true\n  [auth.anonymous]\n  enabled = true\n  org_role = Editor"
---
# Source: kalypso-observability-hub/charts/grafana/templates/deployment-observability-dashboard.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-observability-dashboard
  labels:
    grafana_dashboard: "1"
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm    
data:
  deployment-observability-dashboard.json:
    |-
      {
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "-- Grafana --"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "target": {
                "limit": 100,
                "matchAny": false,
                "tags": [],
                "type": "dashboard"
              },
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "links": [],
        "liveNow": false,
        "panels": [
          {
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "displayMode": "auto",
                  "filterable": true,
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Clusters"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 94
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Environment"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 105
                    },
                    {
                      "id": "custom.minWidth"
                    },
                    {
                      "id": "links",
                      "value": [
                        {
                          "targetBlank": true,
                          "title": "",
                          "url": "http://localhost:3000/d/tJyhXSqVk/environment-state?var-Environment=${__data.fields.environment_id}&var-Workload=${__data.fields.workload_id}&var-DeploymentTarget=${__data.fields.deployment_target_id}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Clusters"
                  },
                  "properties": [
                    {
                      "id": "links",
                      "value": [
                        {
                          "targetBlank": true,
                          "title": "",
                          "url": "http://localhost:3000/d/IPrZeI34k/cluster-state?var-Environment=${__data.fields.environment_id}&var-Workload=${__data.fields.workload_id}&var-DeploymentTarget=${__data.fields.deployment_target_id}&var-Status=${__data.fields.status}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "deployment_target_id"
                  },
                  "properties": [
                    {
                      "id": "custom.hidden",
                      "value": true
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "workload_id"
                  },
                  "properties": [
                    {
                      "id": "custom.hidden",
                      "value": true
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "environment_id"
                  },
                  "properties": [
                    {
                      "id": "custom.hidden",
                      "value": true
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Workspace"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 94
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Application"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 128
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Version"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 89
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Deployed Version"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 140
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Status"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 83
                    },
                    {
                      "id": "custom.displayMode",
                      "value": "color-text"
                    },
                    {
                      "id": "mappings",
                      "value": [
                        {
                          "options": {
                            "failure": {
                              "color": "dark-red",
                              "index": 1
                            },
                            "in_progress": {
                              "color": "dark-blue",
                              "index": 2
                            },
                            "success": {
                              "color": "dark-green",
                              "index": 0
                            }
                          },
                          "type": "value"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 14,
              "w": 22,
              "x": 0,
              "y": 0
            },
            "id": 2,
            "options": {
              "footer": {
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": [
                {
                  "desc": false,
                  "displayName": "Environment"
                }
              ]
            },
            "pluginVersion": "9.1.0",
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P44368ADAD746BC27"
                },
                "format": "table",
                "group": [],
                "metricColumn": "none",
                "rawQuery": true,
                "rawSql": "select dt.name deployment_target_name, \n       e.name environment_name,\n       wk.name workspace_name,\n       a.name application_name,\n       w.name workload_name,\n       wv.version workload_version,\n       deployments.deployed_workload_version,\n       deployments.status,\n       deployments.reconcilers,\n       e.id environment_id,\n       dt.id deployment_target_id,\n       w.id workload_id\nfrom deployment_target dt\n     left outer join (select dt.id deployment_target_id, depl.status, depl.deployed_workload_version, count(1) reconcilers\n     from reconciler r\n          left outer join (select d.reconciler_id, d.status, wv.version deployed_workload_version\n           from deployment d,\n                deployment_assignment da,\n                workload_version wv\n            where d.gitops_commit_id = da.gitops_commit_id \n              and da.workload_version_id = wv.id\n              and d.created_on = (select max(created_on) from deployment where reconciler_id = d.reconciler_id)\n          ) depl on r.id = depl.reconciler_id,\n          deployment_target dt\n     where r.manifests_storage_type = dt.manifests_storage_type\n          and r.manifests_endpoint = dt.manifests_endpoint\n    group by deployment_target_id, status, deployed_workload_version) deployments on dt.id = deployments.deployment_target_id,    \n     deployment_assignment da,\n     workload_version wv,\n     workload w,\n     application a,\n     workspace wk,\n     environment e\nwhere dt.id = da.deployment_target_id\n    and da.workload_version_id = wv.id\n    and wv.workload_id = w.id\n    and w.application_id = a.id\n    and a.workspace_id = wk.id\n    and dt.environment_id = e.id    \n    and da.created_on = (select max(created_on) from deployment_assignment where deployment_target_id = dt.id);",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "value"
                      ],
                      "type": "column"
                    }
                  ]
                ],
                "timeColumn": "time",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Environments State",
            "transformations": [
              {
                "id": "organize",
                "options": {
                  "excludeByName": {
                    "deployment_target_id": false,
                    "environment_id": false,
                    "workload_id": false
                  },
                  "indexByName": {
                    "application_name": 1,
                    "deployed_workload_version": 6,
                    "deployment_target_name": 4,
                    "environment_name": 2,
                    "reconcilers": 8,
                    "status": 7,
                    "workload_name": 3,
                    "workload_version": 5,
                    "workspace_name": 0
                  },
                  "renameByName": {
                    "application_name": "Application",
                    "deployed_workload_version": "Deployed",
                    "deployment_target_name": "Deployment Target",
                    "environemnt_name": "Environment",
                    "environment_name": "Environment",
                    "reconcilers": "Clusters",
                    "status": "Status",
                    "workload_name": "Workload",
                    "workload_version": "Scheduled",
                    "workspace_name": "Workspace"
                  }
                }
              }
            ],
            "type": "table"
          },
          {
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "description": "",
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "custom": {
                  "align": "auto",
                  "displayMode": "auto",
                  "filterable": true,
                  "inspect": false
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 80
                    }
                  ]
                }
              },
              "overrides": [
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D2 Scheduled"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 107
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D2 Deployed"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 96
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D2 Clusters"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 94
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D2 Successful"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 106
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D4 Scheduled"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 108
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D4 Deployed"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 101
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D4 Successful"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 110
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "D4 Clusters"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 98
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "T2 Scheduled"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 105
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "T2 Deployed"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 96
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "T2 Successful"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 107
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "T2 clusters"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 87
                    }
                  ]
                },
                {
                  "matcher": {
                    "id": "byName",
                    "options": "Workload"
                  },
                  "properties": [
                    {
                      "id": "custom.width",
                      "value": 191
                    }
                  ]
                }
              ]
            },
            "gridPos": {
              "h": 11,
              "w": 24,
              "x": 0,
              "y": 14
            },
            "id": 10,
            "options": {
              "footer": {
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": [
                {
                  "desc": false,
                  "displayName": "T2 Successful"
                }
              ]
            },
            "pluginVersion": "9.1.0",
            "targets": [
              {
                "datasource": {
                  "type": "postgres",
                  "uid": "P44368ADAD746BC27"
                },
                "format": "table",
                "group": [],
                "metricColumn": "none",
                "rawQuery": true,
                "rawSql": "select dt.name deployment_target_name,       \n       wk.name workspace_name,\n       a.name application_name, \n       w.name workload_name,\n       max(case e.name\n        when 'd2' THEN wv.version\n        else null\n       end) d2_workload_version,\n       max(case e.name\n        when 'd2' THEN deployments.deployed_workload_version\n        else null\n       end) d2_deployed_workload_version,\n       max(case e.name\n        when 'd2' THEN successfull_reconcilers\n        else null\n       end) d2_successfull_reconcilers,\n       max(case e.name\n        when 'd2' THEN reconcilers\n        else null\n       end) d2_reconcilers,\n\n       max(case e.name\n        when 'd4' THEN wv.version\n        else null\n       end) d4_workload_version,\n       max(case e.name\n        when 'd4' THEN deployments.deployed_workload_version\n        else null\n       end) d4_deployed_workload_version,\n       max(case e.name\n        when 'd4' THEN successfull_reconcilers\n        else null\n       end) d4_successfull_reconcilers,\n       max(case e.name\n        when 'd4' THEN reconcilers\n        else null\n       end) d4_reconcilers,\n\n       max(case e.name\n        when 't2' THEN wv.version\n        else null\n       end) t2_workload_version,\n       max(case e.name\n        when 't2' THEN deployments.deployed_workload_version\n        else null\n       end) t2_deployed_workload_version,\n       max(case e.name\n        when 't2' THEN successfull_reconcilers\n        else null\n       end) t2_successfull_reconcilers,\n       max(case e.name\n        when 't2' THEN reconcilers\n        else null\n       end) t2_reconcilers       \n\nfrom deployment_target dt\n     left outer join (select dt.id deployment_target_id, depl.deployed_workload_version, \n                        sum(\n                        case depl.status\n                            when 'success' THEN 1\n                            else 0\n                        end\n                     ) successfull_reconcilers,\n                     count(1) reconcilers\n     from reconciler r\n          left outer join (select d.reconciler_id, d.status, wv.version deployed_workload_version\n           from deployment d,\n                deployment_assignment da,\n                workload_version wv\n            where d.gitops_commit_id = da.gitops_commit_id \n              and da.workload_version_id = wv.id\n              and d.created_on = (select max(created_on) from deployment where reconciler_id = d.reconciler_id )\n          ) depl on r.id = depl.reconciler_id,\n          deployment_target dt\n     where r.manifests_storage_type = dt.manifests_storage_type\n          and r.manifests_endpoint = dt.manifests_endpoint\n    group by deployment_target_id, deployed_workload_version) deployments on dt.id = deployments.deployment_target_id,    \n     deployment_assignment da,\n     workload_version wv,\n     workload w,\n     application a,\n     workspace wk,\n     environment e\nwhere dt.id = da.deployment_target_id\n    and da.workload_version_id = wv.id\n    and wv.workload_id = w.id\n    and w.application_id = a.id\n    and a.workspace_id = wk.id\n    and dt.environment_id = e.id    \n    and da.created_on = (select max(created_on) from deployment_assignment where deployment_target_id = dt.id)\ngroup by  deployment_target_name,\n       workspace_name,\n       application_name, \n       workload_name    ",
                "refId": "A",
                "select": [
                  [
                    {
                      "params": [
                        "value"
                      ],
                      "type": "column"
                    }
                  ]
                ],
                "timeColumn": "time",
                "where": [
                  {
                    "name": "$__timeFilter",
                    "params": [],
                    "type": "macro"
                  }
                ]
              }
            ],
            "title": "Environment Discrepancies",
            "transformations": [
              {
                "id": "organize",
                "options": {
                  "excludeByName": {
                    "deployment_target_id": true
                  },
                  "indexByName": {
                    "application_name": 1,
                    "deployment_target_id": 4,
                    "deployment_target_name": 3,
                    "dev_deployed_workload_version": 6,
                    "dev_reconcilers": 8,
                    "dev_successfull_reconcilers": 7,
                    "dev_workload_version": 5,
                    "prod_deployed_workload_version": 14,
                    "prod_reconcilers": 16,
                    "prod_successfull_reconcilers": 15,
                    "prod_workload_version": 13,
                    "qa_deployed_workload_version": 10,
                    "qa_reconcilers": 12,
                    "qa_successfull_reconcilers": 11,
                    "qa_workload_version": 9,
                    "workload_name": 2,
                    "workspace_name": 0
                  },
                  "renameByName": {
                    "application_name": "Application",
                    "d2_deployed_workload_version": "D2 Deployed",
                    "d2_reconcilers": "D2 Clusters",
                    "d2_successfull_reconcilers": "D2 Successful",
                    "d2_workload_version": "D2 Scheduled",
                    "d4_deployed_workload_version": "D4 Deployed",
                    "d4_reconcilers": "D4 Clusters",
                    "d4_successfull_reconcilers": "D4 Successful",
                    "d4_workload_version": "D4 Scheduled",
                    "deployment_target_id": "",
                    "deployment_target_name": "Deployment Target",
                    "dev_workload_version": "",
                    "t2_deployed_workload_version": "T2 Deployed",
                    "t2_reconcilers": "T2 clusters",
                    "t2_successfull_reconcilers": "T2 Successful",
                    "t2_workload_version": "T2 Scheduled",
                    "workload_name": "Workload",
                    "workspace_name": "Workspace"
                  }
                }
              }
            ],
            "type": "table"
          }
        ],
        "refresh": false,
        "schemaVersion": 37,
        "style": "dark",
        "tags": [],
        "templating": {
          "list": []
        },
        "time": {
          "from": "now-24h",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Deployment Observability",
        "uid": "9XvMES3Vz",
        "version": 1,
        "weekStart": ""
      }
---
# Source: kalypso-observability-hub/charts/grafana/templates/environment-state-dashboard.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: environment-state-dashboard
  labels:
    grafana_dashboard: "1"
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm    
data:
  environment-state-dashboard.json:
    |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": {
              "type": "grafana",
              "uid": "-- Grafana --"
            },
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P44368ADAD746BC27"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "displayMode": "auto",
                "filterable": true,
                "inspect": false
              },
              "mappings": [
                {
                  "options": {
                    "failure": {
                      "color": "dark-red",
                      "index": 1
                    },
                    "in_progress": {
                      "color": "dark-blue",
                      "index": 2
                    },
                    "success": {
                      "color": "dark-green",
                      "index": 0
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Success"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-text"
                  },
                  {
                    "id": "custom.width",
                    "value": 93
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Failure"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-text"
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "from": 0,
                          "result": {
                            "color": "dark-red",
                            "index": 0
                          },
                          "to": 10000000000
                        },
                        "type": "range"
                      }
                    ]
                  },
                  {
                    "id": "custom.width",
                    "value": 94
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "In Progress"
                },
                "properties": [
                  {
                    "id": "custom.displayMode",
                    "value": "color-text"
                  },
                  {
                    "id": "mappings",
                    "value": [
                      {
                        "options": {
                          "from": 0,
                          "result": {
                            "color": "dark-blue",
                            "index": 0
                          },
                          "to": 1000000000
                        },
                        "type": "range"
                      }
                    ]
                  },
                  {
                    "id": "custom.width",
                    "value": 119
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "GitOps Commit"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 338
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Version"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 74
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Workspace"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 90
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Application"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 102
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Environment"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Workload"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 240
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Deployment Target"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 141
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Deployed On"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "dateTimeAsUS"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 9,
            "w": 23,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "footer": {
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.1.0",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "P44368ADAD746BC27"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "select  \n       wk.name workspace_name,\n       a.name application_name, \n       w.name workload_name,\n       dt.name deployment_target_name,\n       dt.id deployment_target_id,        \n       depl.deployed_workload_version, \n       depl.gitops_commit_id,\n       e.name environment_name,\n       max(depl.deployed_on) deployed_on,\n       sum (case depl.status\n        when 'success' THEN 1\n        else 0\n       end) success_count,\n       sum (case depl.status\n        when 'failure' THEN 1\n        else 0\n       end) failure_count,\n       sum (case depl.status\n        when 'in_progress' THEN 1\n        else 0\n       end) in_progress_count\nfrom reconciler r\n    left outer join (select d.reconciler_id, d.status, wv.version deployed_workload_version, d.gitops_commit_id, d.created_on deployed_on\n    from deployment d,\n        deployment_assignment da,\n        workload_version wv\n    where d.gitops_commit_id = da.gitops_commit_id \n        and da.workload_version_id = wv.id        \n    ) depl on r.id = depl.reconciler_id,\n    deployment_target dt,\n    host h,\n    workspace wk,\n    workload w,\n    application a,\n    environment e\nwhere r.manifests_storage_type = dt.manifests_storage_type\n    and r.manifests_endpoint = dt.manifests_endpoint\n    and r.host_id = h.id\n    and dt.workload_id = w.id\n    and w.application_id = a.id\n    and a.workspace_id = wk.id \n    and dt.environment_id = e.id\n    and e.id = '$Environment' \n    and w.id = '$Workload'\n    and dt.id = '$DeploymentTarget'\ngroup by wk.name, a.name, w.name, dt.name, dt.id, depl.deployed_workload_version, depl.gitops_commit_id, e.name  \norder by depl.deployed_workload_version desc",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Environment History",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "deployment_target_id": true
                },
                "indexByName": {
                  "application_name": 1,
                  "deployed_on": 5,
                  "deployed_workload_version": 7,
                  "deployment_target_id": 6,
                  "deployment_target_name": 4,
                  "environment_name": 2,
                  "failure_count": 10,
                  "gitops_commit_id": 8,
                  "in_progress_count": 11,
                  "success_count": 9,
                  "workload_name": 3,
                  "workspace_name": 0
                },
                "renameByName": {
                  "application_name": "Application",
                  "deployed_on": "Deployed On",
                  "deployed_workload_version": "Version",
                  "deployment_target_id": "",
                  "deployment_target_name": "Deployment Target",
                  "environment_name": "Environment",
                  "failure_count": "Failure",
                  "gitops_commit_id": "GitOps Commit",
                  "in_progress_count": "In Progress",
                  "success_count": "Success",
                  "workload_name": "Workload",
                  "workspace_name": "Workspace"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "schemaVersion": 37,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": "d2",
              "value": "24"
            },
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "definition": "select name __text, id __value from environment",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "Environment",
            "options": [],
            "query": "select name __text, id __value from environment",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "type": "query"
          },
          {
            "current": {
              "selected": false,
              "text": "vsu",
              "value": "25"
            },
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "definition": "select name __text, id __value  from deployment_target",
            "hide": 0,
            "includeAll": false,
            "label": "Deployment Target",
            "multi": false,
            "name": "DeploymentTarget",
            "options": [],
            "query": "select name __text, id __value  from deployment_target",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          },
          {
            "current": {
              "selected": false,
              "text": "rs-dispatcher-framework",
              "value": "25"
            },
            "datasource": {
              "type": "postgres",
              "uid": "P44368ADAD746BC27"
            },
            "definition": "select name __text, id __value  from workload",
            "hide": 0,
            "includeAll": false,
            "multi": false,
            "name": "Workload",
            "options": [],
            "query": "select name __text, id __value  from workload",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Environment State",
      "uid": "tJyhXSqVk",
      "version": 1,
      "weekStart": ""
    }
---
# Source: kalypso-observability-hub/charts/postgres/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgre-db-config
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  db-name: "hub"
---
# Source: kalypso-observability-hub/templates/controller-manager-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kalypso-observability-hub-controller-manager-config
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: controller-manager
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  STORAGE_SERVICE_ADDRESS: "kalypso-observability-hub-api-server:50051"
---
# Source: kalypso-observability-hub/charts/grafana/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: kalypso-observability-hub/charts/grafana/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - watch
  - list
---
# Source: kalypso-observability-hub/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kalypso-observability-hub-manager-role
  labels:
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - hub.kalypso.io
  resources:
  - deploymentdescriptors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hub.kalypso.io
  resources:
  - deploymentdescriptors/finalizers
  verbs:
  - update
- apiGroups:
  - hub.kalypso.io
  resources:
  - deploymentdescriptors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kustomize.toolkit.fluxcd.io
  resources:
  - kustomizations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: kalypso-observability-hub/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kalypso-observability-hub-metrics-reader
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: kalypso-observability-hub/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kalypso-observability-hub-proxy-role
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: kalypso-observability-hub/charts/grafana/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'grafana'
subjects:
- kind: ServiceAccount
  name: 'grafana'
  namespace: 'hub'
---
# Source: kalypso-observability-hub/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kalypso-observability-hub-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'kalypso-observability-hub-manager-role'
subjects:
- kind: ServiceAccount
  name: 'kalypso-observability-hub-controller-manager'
  namespace: 'hub'
---
# Source: kalypso-observability-hub/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kalypso-observability-hub-proxy-rolebinding
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'kalypso-observability-hub-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'kalypso-observability-hub-controller-manager'
  namespace: 'hub'
---
# Source: kalypso-observability-hub/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kalypso-observability-hub-leader-election-role
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kalypso-observability-hub/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kalypso-observability-hub-leader-election-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'kalypso-observability-hub-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'kalypso-observability-hub-controller-manager'
  namespace: 'hub'
---
# Source: kalypso-observability-hub/charts/api-server/templates/api-server.yaml
apiVersion: v1
kind: Service
metadata:
  name: kalypso-observability-hub-api-server
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: api-server
spec:
  ports:
  - name: grpc-port
    port: 50051
    protocol: TCP
    targetPort: grpc-port
  selector:
    control-plane: api-server
  type: ClusterIP
---
# Source: kalypso-observability-hub/charts/grafana/templates/grafana-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app: grafana
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
  ports:
  - name: grafana-http
    port: 3000
    protocol: TCP
    targetPort: 3000
---
# Source: kalypso-observability-hub/charts/postgres/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgre-db-svc
  labels:
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    run: postgre-db
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: kalypso-observability-hub
  ports:
  - port: 5432
    targetPort: 5432
---
# Source: kalypso-observability-hub/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kalypso-observability-hub-controller-manager-metrics-service
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: controller-manager
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
---
# Source: kalypso-observability-hub/charts/api-server/templates/api-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kalypso-observability-hub-api-server
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: api-server
  template:
    metadata:
      labels:
        control-plane: api-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: grpc-api-server      
        command:
        - /server
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: api-server-config
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PORT
              name: api-server-config
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: api-server-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: api-server-secret
        - name: POSTGRES_DBNAME
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DBNAME
              name: api-server-config
        - name: POSTGRES_SSL_MODE
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_SSL_MODE
              name: api-server-config
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: 
        image: ghcr.io/microsoft/kalypso-observability-hub-grpc-api-server:latest
        readinessProbe:
          exec:
            command: ["/grpc_health_probe", "-addr=:50051"]
          initialDelaySeconds: 5
        livenessProbe:
          exec:
            command: ["/grpc_health_probe", "-addr=:50051"]
          initialDelaySeconds: 10
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        ports:
        - name: grpc-port
          containerPort: 50051  
      terminationGracePeriodSeconds: 10
---
# Source: kalypso-observability-hub/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
    helm.sh/chart: grafana-1.0.0
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: kalypso-observability-hub
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: kalypso-observability-hub
    spec:
      containers:
      - env:
        - name: METHOD
          value: WATCH
        - name: LABEL
          value: grafana_dashboard
        - name: FOLDER
          value: /tmp/dashboards
        - name: RESOURCE
          value: both
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: quay.io/kiwigrid/k8s-sidecar:1.19.2
        imagePullPolicy: IfNotPresent
        name: grafana-sc-dashboard
        resources: {}
        volumeMounts:
        - mountPath: /tmp/dashboards
          name: sc-dashboard-volume
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: grafana/grafana:9.1.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        name: grafana
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            memory: 750Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
        - mountPath: /etc/grafana/
          name: grafana-config-volume
        - mountPath: /tmp/dashboards
          name: sc-dashboard-volume
      securityContext:
        fsGroup: 472
        supplementalGroups:
        - 0
      serviceAccountName: grafana
      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-config-volume
        projected:
          sources:
          - configMap:
              items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasource.yaml
                path: provisioning/datasources/datasource.yaml
              name: grafana-config
          - configMap:
              items:
              - key: provider.yaml
                path: provisioning/dashboards/sc-dashboardproviders.yaml
              name: grafana-config-dashboards
      - emptyDir: {}
        name: sc-dashboard-volume
---
# Source: kalypso-observability-hub/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kalypso-observability-hub-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kalypso-observability-hub
    app.kubernetes.io/part-of: kalypso-observability-hub
    control-plane: controller-manager
    helm.sh/chart: kalypso-observability-hub-0.0.1
    app.kubernetes.io/name: kalypso-observability-hub
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: kalypso-observability-hub
      app.kubernetes.io/instance: kalypso-observability-hub
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: kalypso-observability-hub
        app.kubernetes.io/instance: kalypso-observability-hub
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: STORAGE_SERVICE_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: STORAGE_SERVICE_ADDRESS
              name: kalypso-observability-hub-controller-manager-config
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: ghcr.io/microsoft/kalypso-observability-hub-controller-manager:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kalypso-observability-hub-controller-manager
      terminationGracePeriodSeconds: 10
---
# Source: kalypso-observability-hub/charts/postgres/templates/postgre-db.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgre-db
  labels:
    run: postgre-db
    helm.sh/chart: postgres-0.1.0
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: kalypso-observability-hub
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgre-db
  serviceName: postgre-db-svc
  template:
    metadata:
      labels:
        run: postgre-db
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: db-name
              name: postgre-db-config
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgre-db-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgre-db-secret
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:15.2
        imagePullPolicy: Always
        name: postgre-db
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db
  volumeClaimTemplates:
  - metadata:
      name: db
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 200Mi
